{"version":3,"sources":["redux/auth/auth-slice.js","redux/store.js","App.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selector.js","redux/phonebook/phone-actions.js","redux/phonebook/phone-operations.js","redux/phonebook/phone-reducer.js","redux/phonebook/phone-selector.js","services/api-services.js","components/Navigation.js","components/PrivateRoute.js","components/PublicRoute.js","components/Contacts/ContactForm.js","components/Contacts/ContactList.js","components/Contacts/Filter.js"],"names":["authSlice","createSlice","name","initialState","user","email","token","isLoggedIn","isFetchingAuth","error","extraReducers","userRegisterRequest","fulfilled","state","action","payload","userLoginRequest","userLogoutRequest","_","userCheckCurrent","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","contactsPersistConfig","store","configureStore","reducer","auth","persistReducer","authReducer","phoneBook","phoneReducers","devTools","process","persistor","persistStore","HomeView","lazy","RegisterView","LoginView","ContactsView","NotFoundView","App","isFetching","useSelector","getFetchingStatus","isError","getErrorStatus","dispatch","useDispatch","useEffect","className","autoClose","type","color","height","width","fallback","path","exact","restricted","redirectTo","Copyright","id","ReactDOM","render","StrictMode","loading","document","getElementById","createAsyncThunk","newUser","a","registerRequest","loginRequest","logoutRequest","thunkAPI","getState","persistToken","rejectWithValue","checkCurrent","getAuthStatus","getUserName","changeFilter","createAction","fetchContacts","getContacts","contacts","addContacts","newObject","addContactsRequest","deleteContacts","deleteContactsRequest","createReducer","filter","el","filterReducer","combineReducers","getFilter","getVisibleContacts","arr","toLowerCase","includes","axios","defaults","baseURL","headers","common","Authorization","post","data","toast","message","Promise","isRejected","persistedToken","get","delete","Navigation","userName","useState","isOpen","setIsOpen","isSmallScreen","useMediaQuery","query","handleClick","prevState","to","ContactPhone","style","fontSize","activeClassName","Button","variant","onClick","marginLeft","PrivateRoute","children","props","PublicRoute","ContactForm","contactName","setContactName","contactNumber","setContactNumber","formIsOpen","setFormIsOpen","phoneSelectors","checkContacts","target","find","reset","onSubmit","e","preventDefault","phoneOperations","number","autoComplete","value","onChange","placeholder","required","inputClass","country","enableSearch","inputProps","ContactList","map","Filter","phoneActions"],"mappings":"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","file":"static/js/main.a4be4d1e.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport {\r\n  userRegisterRequest,\r\n  userLoginRequest,\r\n  userLogoutRequest,\r\n  userCheckCurrent,\r\n} from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingAuth: false,\r\n  error: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [userRegisterRequest.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.error = false;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [userLoginRequest.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.error = false;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [userLogoutRequest.fulfilled](state, _) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.error = false;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [userCheckCurrent.pending](state, _) {\r\n      state.isFetchingAuth = true;\r\n    },\r\n    [userCheckCurrent.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.error = false;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingAuth = false;\r\n    },\r\n\r\n    [userRegisterRequest.rejected](state, _) {\r\n      state.error = true;\r\n    },\r\n    [userLoginRequest.rejected](state, _) {\r\n      state.error = true;\r\n    },\r\n    [userLogoutRequest.rejected](state, _) {\r\n      state.error = true;\r\n    },\r\n    [userCheckCurrent.rejected](state, _) {\r\n      state.isFetchingAuth = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { phoneReducers } from './phonebook';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'phoneBook',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    phoneBook: persistReducer(contactsPersistConfig, phoneReducers),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PrivateRoute, PublicRoute, Navigation } from 'components';\nimport { userCheckCurrent } from 'redux/auth/auth-operations';\nimport { getFetchingStatus, getErrorStatus } from 'redux/auth/auth-selector';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport { Copyright } from '@material-ui/icons';\nimport { GiCrownedHeart } from 'react-icons/gi';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst HomeView = lazy(() =>\n  import('views/HomeView' /* webpackChunkName: \"home\" */),\n);\nconst RegisterView = lazy(() =>\n  import('views/RegisterView' /* webpackChunkName: \"registration\" */),\n);\nconst LoginView = lazy(() =>\n  import('views/LoginView' /* webpackChunkName: \"login\" */),\n);\nconst ContactsView = lazy(() =>\n  import('views/ContactsView' /* webpackChunkName: \"contacts\" */),\n);\nconst NotFoundView = lazy(() =>\n  import('views/NotFoundView.js' /* webpackChunkName: \"unknownPage\" */),\n);\n\nconst App = () => {\n  const isFetching = useSelector(getFetchingStatus);\n  const isError = useSelector(getErrorStatus);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(userCheckCurrent());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App container\">\n      <ToastContainer autoClose={2000} />\n\n      <Navigation />\n\n      <div className=\"viewContainer\">\n        {isFetching && (\n          <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\n        )}\n        {isError && <div>\"Something was wrong\"</div>}\n        {!isFetching && !isError && (\n          <Suspense\n            fallback={\n              <Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} />\n            }\n          >\n            <Switch>\n              <PublicRoute path=\"/\" exact>\n                <HomeView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/register\" exact restricted>\n                <RegisterView />\n              </PublicRoute>\n\n              <PublicRoute path=\"/login\" exact restricted>\n                <LoginView />\n              </PublicRoute>\n\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n              </PrivateRoute>\n\n              <PublicRoute>\n                <NotFoundView />\n              </PublicRoute>\n            </Switch>\n          </Suspense>\n        )}\n      </div>\n\n      <div className=\"footer\">\n        <Copyright id=\"icon-copyRigths\" />\n        Created by Jennifer | 2021\n        <GiCrownedHeart id=\"icon-heart\" />\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n    registerRequest,\r\n    loginRequest,\r\n    logoutRequest,\r\n    checkCurrent,\r\n} from 'services/api-services';\r\n\r\nexport const userRegisterRequest = createAsyncThunk(\r\n    'auth/register',\r\n    async newUser => {\r\n        const user = await registerRequest(newUser);\r\n        return user;\r\n    },\r\n);\r\n\r\nexport const userLoginRequest = createAsyncThunk(\r\n    'auth/login',\r\n    async newUser => {\r\n        const user = await loginRequest(newUser);\r\n        return user;\r\n    },\r\n);\r\n\r\nexport const userLogoutRequest = createAsyncThunk(\r\n    'auth/logout',\r\n    async () => await logoutRequest(),\r\n);\r\n\r\nexport const userCheckCurrent = createAsyncThunk(\r\n    'auth/checkCurrent',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        const persistToken = state.auth.token;\r\n\r\n        if (!persistToken) {\r\n            return thunkAPI.rejectWithValue();\r\n        }\r\n\r\n        const user = await checkCurrent(persistToken);\r\n        return user;\r\n    },\r\n);","export const getAuthStatus = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const getToken = state => state.auth.token;\r\nexport const getFetchingStatus = state => state.auth.isFetchingAuth;\r\nexport const getErrorStatus = state => state.auth.error;\r\n\r\nexport const getContacts = state => state.phoneBook.contacts;\r\nexport const getFilter = state => state.phoneBook.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n    const arr = getContacts(state);\r\n    const filter = getFilter(state);\r\n\r\n    return arr.filter(el =>\r\n        el.contactName.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('phoneBook/filter');","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n  getContacts,\r\n  addContactsRequest,\r\n  deleteContactsRequest,\r\n} from 'services/api-services';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'phoneBook/fetchContacts',\r\n  async () => {\r\n    const contacts = await getContacts();\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'phoneBook/add',\r\n  async newObject => {\r\n    const contacts = await addContactsRequest(newObject);\r\n    return contacts;\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk('phoneBook/delete', async id => {\r\n  return await deleteContactsRequest(id);\r\n});","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './phone-actions';\r\nimport { fetchContacts, addContacts, deleteContacts } from './phone-operations';\r\n\r\nconst getContacts = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  [addContacts.fulfilled]: (state, action) => [...state, action.payload],\r\n  [deleteContacts.fulfilled]: (state, action) =>\r\n    state.filter(el => el.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: getContacts,\r\n  filter: filterReducer,\r\n});","export const getContacts = state => state.phoneBook.contacts;\r\nexport const getFilter = state => state.phoneBook.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const arr = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  return arr.filter(el => el.name.toLowerCase().includes(filter.toLowerCase()));\r\n};","import { isRejected } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = '';\r\n\r\n// Auth requests\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const registerRequest = async newUser => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', newUser);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    toast.error(`Registration error. ${error.message}`);\r\n    return new Promise(isRejected);\r\n  }\r\n};\r\n\r\nexport const loginRequest = async user => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', user);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    toast.error(`Login error. ${error.message}`);\r\n    return new Promise(isRejected);\r\n  }\r\n};\r\n\r\nexport const logoutRequest = async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    toast.error(`Logout error. ${error.message}`);\r\n    return new Promise(isRejected);\r\n  }\r\n};\r\n\r\nexport const checkCurrent = async persistedToken => {\r\n  token.set(persistedToken);\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n    return data;\r\n  } catch (error) {\r\n    toast.error(`CheckCurrent error. ${error.message}`);\r\n    return new Promise(isRejected);\r\n  }\r\n};\r\n\r\n// Contacts requests\r\nexport async function getContacts() {\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    return data;\r\n  } catch (error) {\r\n    toast.error(`Getting Contacts error. ${error.message}`);\r\n    return new Promise(isRejected);\r\n  }\r\n}\r\n\r\nexport async function addContactsRequest(newObject) {\r\n  try {\r\n    const { data } = await axios.post('/contacts', newObject);\r\n    return data;\r\n  } catch (error) {\r\n    toast.error(`Adding new contact error. ${error.message}`);\r\n    return new Promise(isRejected);\r\n  }\r\n}\r\n\r\nexport async function deleteContactsRequest(id) {\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    return id;\r\n  } catch (error) {\r\n    toast.error(`Deleting contact error. ${error.message}`);\r\n    return new Promise(isRejected);\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { getAuthStatus, getUserName } from 'redux/auth/auth-selector';\r\nimport { userLogoutRequest } from 'redux/auth/auth-operations';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport { ContactPhone } from '@material-ui/icons';\r\nimport { ImReddit, ImExit, ImCross } from 'react-icons/im';\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(state => getAuthStatus(state));\r\n  const userName = useSelector(state => getUserName(state));\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const isSmallScreen = useMediaQuery({ query: '(max-device-width: 767px)' });\r\n\r\n  const handleClick = () => {\r\n    setIsOpen(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navBar container\">\r\n        <NavLink to=\"/\" className=\"logo\">\r\n          <div className=\"navLogoBackground\">\r\n            <ContactPhone className=\"logo\" style={{ fontSize: 25 }} />\r\n          </div>\r\n        </NavLink>\r\n\r\n        {!isSmallScreen && (\r\n          <NavLink to=\"/\" exact className=\"link\" activeClassName=\"activeLink\">\r\n            Home\r\n          </NavLink>\r\n        )}\r\n\r\n        {isLoggedIn && (\r\n          <NavLink to=\"/contacts\" className=\"link\" activeClassName=\"activeLink\">\r\n            PhoneBook\r\n          </NavLink>\r\n        )}\r\n\r\n        {isSmallScreen && (\r\n          <Button\r\n            id=\"modalMenu\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"button\"\r\n            onClick={handleClick}\r\n          >\r\n            {isOpen ? <ImCross /> : <GiHamburgerMenu />}\r\n          </Button>\r\n        )}\r\n\r\n        <span\r\n          className={\r\n            !isSmallScreen\r\n              ? 'authBar'\r\n              : isOpen\r\n              ? 'authMobileBar'\r\n              : 'visually-hidden'\r\n          }\r\n          onClick={handleClick}\r\n        >\r\n          {isLoggedIn ? (\r\n            <>\r\n              <ImReddit className=\"avatar\" style={{ fontSize: 25 }} />\r\n              <span className=\"greeting\">\r\n                Welcome\r\n                <span className=\"userName\">{userName}</span>\r\n              </span>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                type=\"button\"\r\n                onClick={() => dispatch(userLogoutRequest())}\r\n              >\r\n                Log out\r\n                <ImExit style={{ marginLeft: 10 }} />\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <NavLink\r\n                to=\"/register\"\r\n                exact\r\n                className=\"link register\"\r\n                activeClassName=\"activeLink\"\r\n              >\r\n                Register\r\n              </NavLink>\r\n              <NavLink\r\n                to=\"/login\"\r\n                className=\"link\"\r\n                activeClassName=\"activeLink\"\r\n              >\r\n                Login\r\n              </NavLink>\r\n            </>\r\n          )}\r\n        </span>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getAuthStatus } from \"redux/auth/auth-selector\";\r\n\r\nconst PrivateRoute = ({ children, redirectTo = '/', ...props }) => {\r\n    const isLoggedIn = useSelector(state => getAuthStatus(state));\r\n\r\n    return (\r\n        <Route {...props}>\r\n            {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getAuthStatus } from \"redux/auth/auth-selector\";\r\n\r\nconst PublicRoute = ({\r\n    children,\r\n    restricted = false,\r\n    redirectTo = '/',\r\n    ...props\r\n}) => {\r\n    const isLoggedIn = useSelector(state => getAuthStatus(state));\r\n\r\n    return (\r\n        <Route {...props}>\r\n            {isLoggedIn && restricted ? <Redirect to={redirectTo} /> : children}\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phoneOperations, phoneSelectors } from 'redux/phonebook';\r\nimport { toast } from 'react-toastify';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\r\nimport PhoneInput from 'react-phone-input-2';\r\nimport 'react-phone-input-2/lib/style.css';\r\n\r\nconst ContactForm = () => {\r\n  const [contactName, setContactName] = useState('');\r\n  const [contactNumber, setContactNumber] = useState('+380');\r\n  const [formIsOpen, setFormIsOpen] = useState(false);\r\n  const contacts = useSelector(state => phoneSelectors.getContacts(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (checkContacts(contacts, contactName)) {\r\n      toast.error(`${contactName} is already in contacts.`);\r\n    } else {\r\n      dispatch(\r\n        phoneOperations.addContacts({\r\n          name: contactName,\r\n          number: contactNumber,\r\n        }),\r\n      );\r\n\r\n      reset();\r\n    }\r\n  };\r\n\r\n  const checkContacts = (arr, target) => {\r\n    return arr.find(({ name }) => name.toLowerCase() === target.toLowerCase());\r\n  };\r\n\r\n  const reset = () => {\r\n    setContactName('');\r\n    setContactNumber('+380');\r\n  };\r\n\r\n  const openFormToggle = () => {\r\n    setFormIsOpen(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <form className=\"subForm\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <div className=\"openSubFormBox\" onClick={openFormToggle}>\r\n        <h2 className=\"subFormTitle\">Add new contacts:</h2>\r\n        <div className=\"arrowBox\">\r\n          {!formIsOpen ? <IoIosArrowDown /> : <IoIosArrowUp />}\r\n        </div>\r\n      </div>\r\n\r\n      {formIsOpen && (\r\n        <div className=\"subFormsBox\">\r\n          <label className=\"subFormLabel\">\r\n            <span className=\"subFormLabelTitle\">Name:</span>\r\n            <input\r\n              className=\"subFormInput\"\r\n              type=\"text\"\r\n              value={contactName}\r\n              onChange={e => setContactName(e.target.value)}\r\n              placeholder=\"input name\"\r\n              autoComplete=\"off\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className=\"subFormLabel\">\r\n            <span className=\"subFormLabelTitle\">Phone:</span>\r\n            <PhoneInput\r\n              inputClass=\"phoneNumberClass\"\r\n              name=\"number\"\r\n              country={'ua'}\r\n              value={contactNumber}\r\n              placeholder=\"+38 (111) 111 11 11\"\r\n              onChange={setContactNumber}\r\n              enableSearch\r\n              inputProps={{ required: true }}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\" className=\"addBtn\">\r\n            Add\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phoneOperations, phoneSelectors } from 'redux/phonebook';\r\n\r\nimport { MdAccountCircle } from 'react-icons/md';\r\nimport { CgCloseO } from 'react-icons/cg';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state =>\r\n    phoneSelectors.getVisibleContacts(state),\r\n  );\r\n\r\n  useEffect(() => dispatch(phoneOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <ul className=\"contacsList\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"contactItem\">\r\n          <MdAccountCircle id=\"mdAccount\" className=\"box1\" />\r\n          <span className=\"contactName box2\">{name}</span>\r\n          <span className=\"contactNumber box3\">{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            className=\"closeBtn box4\"\r\n            onClick={() => dispatch(phoneOperations.deleteContacts(id))}\r\n          >\r\n            <CgCloseO />\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { phoneActions, phoneSelectors } from 'redux/phonebook';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(state => phoneSelectors.getFilter(state));\r\n  const [formIsOpen, setFormIsOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const openFormToggle = () => {\r\n    setFormIsOpen(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"subForm\">\r\n      <div className=\"openSubFormBox\" onClick={openFormToggle}>\r\n        <h2 className=\"subFormTitle\">Search contacts:</h2>\r\n        <div className=\"arrowBox\">\r\n          {!formIsOpen ? <IoIosArrowDown /> : <IoIosArrowUp />}\r\n        </div>\r\n      </div>\r\n\r\n      {formIsOpen && (\r\n        <div className=\"subFormsBox\">\r\n          <label className=\"subFormLabel\">\r\n            <input\r\n              className=\"subFormInput\"\r\n              type=\"text\"\r\n              onChange={e =>\r\n                dispatch(phoneActions.changeFilter(e.target.value))\r\n              }\r\n              value={value}\r\n              name=\"filter\"\r\n              placeholder=\"input name\"\r\n            />\r\n          </label>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;"],"sourceRoot":""}